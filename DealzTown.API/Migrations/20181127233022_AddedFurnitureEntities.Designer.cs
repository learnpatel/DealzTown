// <auto-generated />
using System;
using DealzTown.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DealzTown.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20181127233022_AddedFurnitureEntities")]
    partial class AddedFurnitureEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview3-35497");

            modelBuilder.Entity("DealzTown.API.Models.Furniture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("FurnitureType");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LastUpdateDate");

                    b.Property<DateTime>("LastViewDateTime");

                    b.Property<int>("LikesCount");

                    b.Property<string>("Name");

                    b.Property<DateTime>("PostedDate");

                    b.Property<int>("Price");

                    b.Property<DateTime>("SoldDate");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Furnitures");
                });

            modelBuilder.Entity("DealzTown.API.Models.FurniturePhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("Description");

                    b.Property<int?>("FurnitureId");

                    b.Property<int>("HomeFurnitureId");

                    b.Property<bool>("IsMain");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("FurnitureId");

                    b.ToTable("FurniturePhotos");
                });

            modelBuilder.Entity("DealzTown.API.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("Description");

                    b.Property<bool>("IsMain");

                    b.Property<string>("Url");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("DealzTown.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Gender");

                    b.Property<string>("Interests");

                    b.Property<string>("Introduction");

                    b.Property<string>("KnownAs");

                    b.Property<DateTime>("LastActive");

                    b.Property<string>("LookingFor");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DealzTown.API.Models.Furniture", b =>
                {
                    b.HasOne("DealzTown.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DealzTown.API.Models.FurniturePhoto", b =>
                {
                    b.HasOne("DealzTown.API.Models.Furniture", "Furniture")
                        .WithMany("Photos")
                        .HasForeignKey("FurnitureId");
                });

            modelBuilder.Entity("DealzTown.API.Models.Photo", b =>
                {
                    b.HasOne("DealzTown.API.Models.User", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
